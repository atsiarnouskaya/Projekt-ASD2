package SiecPrzeplywowa;import com.google.gson.*;import java.awt.geom.Point2D;import java.io.FileNotFoundException;import java.io.FileReader;import java.io.IOException;import java.util.List;public class Main {    public static void main(String[] args) throws FileNotFoundException {//        Siec S = new Siec();//        S.addEdge(11, 483, 274, 469, 328);//        S.addEdge(13, 284, 107, 238, 236);//        S.addEdge(13, 521, 406, 556, 358);//        S.addEdge(0, 521, 406, 470, 489);//        S.addEdge(8, 238, 236, 128, 242);//        S.addEdge(10, 238, 236, 351, 306);//        S.printGraph();//        System.out.println();        Data data= readFile();        Siec S2 = new Siec();        /*        // Przykład w jaki sposób możemy uzupełnić graf wierzchołkami celem dodania dodatkowych informacji do wierzchołków        List<Point2D> intersections = data.getIntersections();        for(var point : intersections){            var v = S2.addVertex((int)point.getX(), (int) point.getY());            v.type = "Intersection";        }        for(var farmland: data.farmlands){            var v = S2.addVertex((int)farmland.getX(), (int) farmland.getY());            v.type = "Farmland";            v.farmland = farmland;        }        */        for (Road road : data.roads) {            S2.addEdge(road.getMaxBarleyFlow(), (int)road.x1, (int)road.y1, (int)road.x2, (int)road.y2);        }        S2.printGraph();        //Vertex v1 = new Vertex(646, 862);        //Vertex v2 = new Vertex(479, 768);        //S2.printGraph();        //System.out.println(S2.BFS(v1, v2));        System.out.println(S2.maxFlow(data.farmlands.get(0), data.breweries.get(0)));    }    public static Data readFile() {        try (FileReader reader = new FileReader("data.json")) {            Gson gson = new GsonBuilder().setPrettyPrinting().create();            Data data = gson.fromJson(reader, Data.class);            return data;        } catch (IOException e) {            throw new RuntimeException(e);        }    }}